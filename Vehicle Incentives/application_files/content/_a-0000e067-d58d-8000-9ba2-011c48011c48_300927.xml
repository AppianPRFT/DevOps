<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<contentHaul xmlns:a="http://www.appian.com/ae/types/2009">
    <versionUuid>_a-0000e067-d58d-8000-9ba2-011c48011c48_303048</versionUuid>
    <rule>
        <name>VIM_GetSalesDataByType</name>
        <uuid>_a-0000e067-d58d-8000-9ba2-011c48011c48_300927</uuid>
        <description>Given the vim sales list, this returns the data for the line chart for each vehicle type ex { vehicleType: "Sedan", monthlysales: {1,12,3,4,5,2,6,8,4,2,6,1}}</description>
        <parentUuid>d1151d0a-2a3e-4e80-b3b0-105a99496272</parentUuid>
        <visibility>
            <advertise>false</advertise>
            <hierarchy>true</hierarchy>
            <indexable>true</indexable>
            <quota>false</quota>
            <searchable>true</searchable>
            <system>false</system>
            <unlogged>false</unlogged>
        </visibility>
        <definition>load(
  /*local!pagingInfo: a!pagingInfo(*/
  /*startIndex: 1,*/
  /*batchSize: 10*/
  /*),*/
  local!months: {
    "Jan",
    "Feb",
    "Mar",
    "Apr",
    "May",
    "Jun",
    "Jul",
    "Aug",
    "Sep",
    "Oct",
    "Nov",
    "Dec"
  },
  /*local!salesTypes: a!queryEntity(*/
  /*entity: cons!VIM_SALES_DATA_DSE,*/
  /*query: a!query(*/
  /*aggregation: a!queryAggregation(*/
  /*aggregationColumns: a!queryAggregationColumn(*/
  /*field: "vehicleClass",*/
  /*isGrouping: true,*/
  /*aggregationFunction: "SUM"*/
  /*)*/
  /*),*/
  /*pagingInfo: local!pagingInfo*/
  /*)*/
  /*),*/
  /*with(*/
  /*local!result: a!forEach(*/
  /*local!salesTypes.data,*/
  /*{*/
  /*type: fv!item.vehicleClass,*/
  /*data: {*/
  /*0,*/
  /*0,*/
  /*0,*/
  /*0,*/
  /*0,*/
  /*0,*/
  /*0,*/
  /*0,*/
  /*0,*/
  /*0,*/
  /*0,*/
  /*0*/
  /*}*/
  /*}*/
  /*),*/
  /*local!types: cast(103,{}),*/
  local!getTypes: #"SYSTEM_SYSRULES_forEach"(
    ri!sales,
    if(
      not(
        isnull(
          fv!item.bonusPaid
        )
      ),
      {type: ri!result[wherecontains(
        fv!item.vehicleClass, #"SYSTEM_SYSRULES_forEach"(
          ri!result, cast(
            3, fv!item.type
          )
        )
      )
      ].type,
      month: month(
        todate(
          fv!item.soldOn
        )
      )}
      ,
      null
    )
    
    /*if(*/
    /*not(*/
    /*false*/
    /*isnull(*/
    /*fv!item.bonusPaid*/
    /*)*/
    /*),*/
    /*if the sale shas been paid*/
    /*updatearray(*/
    /*ri!result[wherecontains(*/
    /*fv!item.vehicleClass, cast(*/
    /*103, a!forEach(*/
    /*ri!result, fv!item.type*/
    /*)*/
    /*)*/
    /*)],*/
    /*month(*/
    /*todate(*/
    /*fv!item.soldOn*/
    /*)*/
    /*),*/
    /*1*/
    /*),*/
    /*updatearray(*/
    /*ri!result[wherecontains(*/
    /*fv!item.vehicleClass, cast(*/
    /*103, a!forEach(*/
    /*ri!result, fv!item.type*/
    /*)*/
    /*)*/
    /*)],*/
    /*month(*/
    /*todate(*/
    /*fv!item.soldOn*/
    /*)*/
    /*),*/
    /*1*/
    /*)*/
    /*        */
    /*)*/
    
  ),
  /*local!getTypes: a!forEach(*/
  /*ri!sales,*/
  /*if(*/
  /*not(*/
  /*false*/
  /*isnull(*/
  /*fv!item.bonusPaid*/
  /*)*/
  /*),*/
  /*if the sale shas been paid*/
  /*updatearray(*/
  /*local!resultdata[wherecontains(*/
  /*fv!item.vehicleClass, cast(*/
  /*103, a!forEach(*/
  /*local!result, fv!item.type*/
  /*)*/
  /*)*/
  /*)],*/
  /*month(*/
  /*todate(*/
  /*fv!item.soldOn*/
  /*)*/
  /*),*/
  /*1*/
  /*),*/
  /*updatearray(*/
  /*local!resultdata[wherecontains(*/
  /*fv!item.vehicleClass, cast(*/
  /*103, a!forEach(*/
  /*local!result, fv!item.type*/
  /*)*/
  /*)*/
  /*)],*/
  /*month(*/
  /*todate(*/
  /*fv!item.soldOn*/
  /*)*/
  /*),*/
  /*1*/
  /*)*/
  /*        */
  /*)*/
  /*),*/
  local!getTypes
)/*)*/</definition>
        <namedTypedValue>
            <name>sales</name>
            <type>
                <name>VIM_SalesData?list</name>
                <namespace>urn:com:appian:types:VIM</namespace>
            </type>
        </namedTypedValue>
        <namedTypedValue>
            <name>result</name>
            <type>
                <name>Variant</name>
                <namespace>http://www.appian.com/ae/types/2009</namespace>
            </type>
        </namedTypedValue>
        <preferredEditor>legacy</preferredEditor>
        <offlineEnabled>false</offlineEnabled>
    </rule>
    <roleMap public="true">
        <role inherit="true" allowForAll="false" name="readers">
            <users/>
            <groups/>
        </role>
        <role inherit="true" allowForAll="false" name="authors">
            <users/>
            <groups/>
        </role>
        <role inherit="true" allowForAll="false" name="administrators">
            <users/>
            <groups/>
        </role>
        <role inherit="false" allowForAll="false" name="denyReaders">
            <users/>
            <groups/>
        </role>
        <role inherit="false" allowForAll="false" name="denyAuthors">
            <users/>
            <groups/>
        </role>
        <role inherit="false" allowForAll="false" name="denyAdministrators">
            <users/>
            <groups/>
        </role>
    </roleMap>
    <typedValue>
        <type>
            <name>RuleTestConfig?list</name>
            <namespace>http://www.appian.com/ae/types/2009</namespace>
        </type>
        <value>
            <el>
                <a:name>salesTest</a:name>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="a:Expression">load(
  local!selectedIncentive,
  local!pagingInfo: #"SYSTEM_SYSRULES_pagingInfo"(
    startIndex: 1,
    batchSize: 10,
    sort: #"SYSTEM_SYSRULES_sortInfo"(
      field:"soldOn"
    )
  ),
   
    /*local!sales:rule!VIM_GetAllSalesData(1),*/
    local!sales: #"SYSTEM_SYSRULES_queryEntity"(
      entity: #"_a-0000dfd8-6941-8000-9ba2-011c48011c48_191192",
      query: #"SYSTEM_SYSRULES_query"(
        logicalExpression: #"SYSTEM_SYSRULES_queryLogicalExpression"(
          operator: "AND",
          filters: {
            #"SYSTEM_SYSRULES_queryFilter"(
              field: "id",
              operator: "not null"
            ),
            #"SYSTEM_SYSRULES_queryFilter"(
              field: "hasAccess",
              operator: "=",
              value: #"_a-0000e067-d58d-8000-9ba2-011c48011c48_288381"()
            ),
            if(
              #"_a-0000dd3a-dada-8000-daab-640000640000_11122"(
                local!selectedIncentive
              ),
              {},
              #"SYSTEM_SYSRULES_queryFilter"(
                field: "incentiveId",
                operator: "=",
                value: local!selectedIncentive
              )
            )
          }
        ),
        pagingInfo: local!pagingInfo
      )
    ),
    local!sales.data)</a:value>
                    <a:nameRef>sales</a:nameRef>
                    <a:id>1</a:id>
                </a:ruleInputTestConfigs>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true"/>
                    <a:nameRef>result</a:nameRef>
                    <a:id>2</a:id>
                </a:ruleInputTestConfigs>
                <a:assertions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true"/>
            </el>
            <el>
                <a:name>Unnamed Test Case</a:name>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="a:Expression">#"_a-0000dfd8-6941-8000-9ba2-011c48011c48_189509"()</a:value>
                    <a:nameRef>sales</a:nameRef>
                    <a:id>1</a:id>
                </a:ruleInputTestConfigs>
                <a:ruleInputTestConfigs>
                    <a:value xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:type="a:Expression">load(
  local!pagingInfo: #"SYSTEM_SYSRULES_pagingInfo"(
    startIndex: 1,
    batchSize: 10
  ),
  local!salesTypes: #"SYSTEM_SYSRULES_queryEntity"(
    entity: #"_a-0000dfd8-6941-8000-9ba2-011c48011c48_191192",
    query: #"SYSTEM_SYSRULES_query"(
      aggregation: #"SYSTEM_SYSRULES_queryAggregation"(
        aggregationColumns: #"SYSTEM_SYSRULES_queryAggregationColumn"(
          field: "vehicleClass",
          isGrouping: true,
          aggregationFunction: "SUM"
        )
      ),
      pagingInfo: local!pagingInfo
    )
  ),
  
  local!result: #"SYSTEM_SYSRULES_forEach"(
    local!salesTypes.data,
    {
      type: fv!item.vehicleClass,
      data: {
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0,
        0
      }
    }
  ),
  local!result
)</a:value>
                    <a:nameRef>result</a:nameRef>
                    <a:id>2</a:id>
                </a:ruleInputTestConfigs>
                <a:assertions xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:nil="true"/>
            </el>
        </value>
    </typedValue>
    <history>
        <historyInfo versionUuid="_a-0000e067-d58d-8000-9ba2-011c48011c48_303048"/>
    </history>
</contentHaul>
